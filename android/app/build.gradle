plugins {
    id "com.android.application"
    id "kotlin-android"
    id "dev.flutter.flutter-gradle-plugin"
}

android {
    namespace = "com.example.labsadz"
    compileSdk = flutter.compileSdkVersion
    ndkVersion = flutter.ndkVersion

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8
    }

    defaultConfig {
        applicationId = "com.example.labsadz"
        minSdk = 21
        targetSdk = 33
        versionCode = flutter.versionCode
        versionName = flutter.versionName
         multiDexEnabled true
    }


    buildTypes {
        release {
            signingConfig = signingConfigs.debug
            minifyEnabled false
            shrinkResources false
        }
    }

    // Ensure task ordering - ensure that `processDebugGoogleServices` completes before `mapDebugSourceSetPaths`
    afterEvaluate {
        // Make sure that `processReleaseGoogleServices` finishes before `mapReleaseSourceSetPaths`
        tasks.named("mapReleaseSourceSetPaths") {
            dependsOn tasks.named("processReleaseGoogleServices")
        }
    }
}

dependencies {
    implementation platform('com.google.firebase:firebase-bom:32.1.1')
    implementation 'com.google.firebase:firebase-auth'
    implementation 'com.google.android.gms:play-services-auth:20.7.0'

    tasks.whenTaskAdded { task ->
    if (task.name == 'mergeReleaseResources') {
        task.dependsOn ':app:processReleaseGoogleServices'
    }
}
}

// Apply the google-services plugin at the bottom
apply plugin: 'com.google.gms.google-services'
